# Script para detener el sistema distribuido UbicaMe

Write-Host "üõë Deteniendo Sistema Distribuido UbicaMe..." -ForegroundColor Red
Write-Host "=============================================" -ForegroundColor Yellow

# Detener todos los procesos de Node.js
Write-Host "üîÑ Deteniendo todos los servicios Node.js..." -ForegroundColor Yellow
try {
    $nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue
    if ($nodeProcesses) {
        $nodeProcesses | Stop-Process -Force
        Write-Host "‚úÖ Servicios Node.js detenidos: $($nodeProcesses.Count) procesos" -ForegroundColor Green
    } else {
        Write-Host "‚ÑπÔ∏è  No hay servicios Node.js ejecut√°ndose" -ForegroundColor Cyan
    }
} catch {
    Write-Host "‚ùå Error deteniendo servicios Node.js: $($_.Exception.Message)" -ForegroundColor Red
}

# Opcional: Detener RabbitMQ si se desea
Write-Host ""
$stopRabbitMQ = Read-Host "¬øDesea detener RabbitMQ tambi√©n? (y/N)"
if ($stopRabbitMQ -eq "y" -or $stopRabbitMQ -eq "Y") {
    Write-Host "üê∞ Deteniendo RabbitMQ..." -ForegroundColor Yellow
    try {
        Stop-Service -Name "RabbitMQ" -Force -ErrorAction SilentlyContinue
        Write-Host "‚úÖ RabbitMQ detenido" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Error deteniendo RabbitMQ: $($_.Exception.Message)" -ForegroundColor Red
    }
} else {
    Write-Host "‚ÑπÔ∏è  RabbitMQ contin√∫a ejecut√°ndose" -ForegroundColor Cyan
}

# Verificar puertos liberados
Write-Host ""
Write-Host "üîç Verificando puertos liberados..." -ForegroundColor Yellow
$ports = @(3000, 3001, 3002, 3003, 3004, 4000)
$services = @("API Gateway", "Auth Service", "User Service", "Task Service", "Location Service", "Frontend")

for ($i = 0; $i -lt $ports.Length; $i++) {
    $port = $ports[$i]
    $service = $services[$i]
    
    try {
        $connection = Test-NetConnection -ComputerName "localhost" -Port $port -InformationLevel Quiet -WarningAction SilentlyContinue
        if ($connection) {
            Write-Host "‚ö†Ô∏è  $service - Puerto $port (A√öN EJECUT√ÅNDOSE)" -ForegroundColor Yellow
        } else {
            Write-Host "‚úÖ $service - Puerto $port (LIBERADO)" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚úÖ $service - Puerto $port (LIBERADO)" -ForegroundColor Green
    }
}

Write-Host ""
Write-Host "‚úÖ Sistema detenido exitosamente!" -ForegroundColor Green
Write-Host ""
Write-Host "üìù Para reiniciar el sistema, ejecute: start-distributed-system.ps1" -ForegroundColor Cyan
Write-Host ""
Write-Host "Press any key to continue..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown") 